{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["keywords","frontmatter","split","map","e","trim","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","description","excerpt","className","style","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","marginLeft","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"qPAQA,IAAMA,EAAW,YAAoC,IAAlBA,EAAiB,EAAhCC,YAAeD,SACjC,OAAKA,EAGEA,EAASE,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAF7B,IAKLC,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKP,YAAYe,MACxBK,YAAab,EAAKP,YAAYoB,aAAeb,EAAKc,QAClDtB,SAAUA,EAASQ,KAErB,4BAAKA,EAAKP,YAAYe,OACtB,uBACEO,UAAU,cACVC,MAAK,iBACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBpB,EAAKP,YAAY6B,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQxB,EAAKyB,QAC7C,wBACET,MAAO,CACLG,aAAcC,YAAO,MAGzB,kBAAC,IAAD,MAEA,wBACEJ,MAAO,CACLE,QAAQ,OACRQ,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,EACTC,WAAY,IAGd,4BACGpB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACKxB,EAASjB,YAAYe,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKlB,YAAYe,MADpB,U,GApDiB2B,IAAMC,WA+DtBtC,YAER,IAAMuC,EAAS","file":"component---src-templates-blog-post-js-fffe615f5a760a0de10a.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst keywords = ({ frontmatter: { keywords } }) => {\n  if (!keywords) {\n    return []\n  }\n  return keywords.split(',').map(e => e.trim())\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          keywords={keywords(post)}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          className=\"secondColor\"\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n            marginLeft: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\", locale: \"ru\")\n        description\n        keywords\n      }\n    }\n  }\n`\n"],"sourceRoot":""}