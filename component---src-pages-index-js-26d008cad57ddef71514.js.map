{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/bio.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","className","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1__","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","oceanBeachTheme","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","footerQuery","Footer","react_default","gatsby_browser_entry","git","marginTop","href","_390769054","Layout","header","_this$props","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","footer","SocialLink","react__WEBPACK_IMPORTED_MODULE_3___default","target","bioQuery","Bio","gatsby__WEBPACK_IMPORTED_MODULE_4__","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fixed","avatar","childImageSharp","alt","verticalAlign","minWidth","borderRadius","imgStyle","paddingLeft","fontSize","mail","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","icon","faEnvelope","vk","faVk","instagram","faInstagram","github","faGithub","_public_static_d_4035997540_json__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-index-js-26d008cad57ddef71514.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Все статьи\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, `блог`, `grig`, `grig.life`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small className=\"secondColor\">{node.frontmatter.date}</small>\n              <p>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n                <small>\n                  <Link className=\"secondColor\" to={node.fields.slug}>\n                    Читать дальше →\n                  </Link>\n                </small>\n              </p>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM YYYY\", locale: \"ru\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport oceanBeachTheme from 'typography-theme-ocean-beach'\n\nconst typography = new Typography(oceanBeachTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={footerQuery}\n    render={data => {\n      const { git } = data.site.siteMetadata\n      return (\n        <footer\n          className=\"secondColor\"\n          style={{\n            marginTop: rhythm(2),\n          }}\n        >\n          <p>Исходный код на <a className=\"secondColor\" href={git}>GitHub</a></p>\n        </footer>\n      )\n    }}\n  />\n)\n\nconst footerQuery = graphql`\n  query FooterQuery {\n    site {\n      siteMetadata {\n        git\n      }\n    }\n  }\n`\n\nexport default Footer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Footer from \"./footer\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVk, faInstagram, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\n\nimport { rhythm } from \"../utils/typography\"\n\nconst SocialLink = props => (\n  <a\n    className=\"socialLink\"\n    style={{\n      marginRight: 10\n    }}\n    target=\"_blank\"\n    {...props}\n  >\n    {props.children}\n  </a>\n)\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `table`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p\n              className=\"secondColor\"\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                paddingLeft: 20,\n              }}\n            >\n              {author}\n            </p>\n            <p\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                paddingLeft: 20,\n                fontSize: 25,\n              }}\n            >\n              <SocialLink href={`mailto:${social.mail}`}>\n                <FontAwesomeIcon icon={faEnvelope} />\n              </SocialLink>\n              <SocialLink href={social.vk}>\n                <FontAwesomeIcon icon={faVk} />\n              </SocialLink>\n              <SocialLink href={social.instagram}>\n                <FontAwesomeIcon icon={faInstagram} />\n              </SocialLink>\n              <SocialLink href={social.github}>\n                <FontAwesomeIcon icon={faGithub} />\n              </SocialLink>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          vk\n          instagram\n          github\n          mail\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}