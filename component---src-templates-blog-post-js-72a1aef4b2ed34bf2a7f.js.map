{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/bio.js"],"names":["keywords","_ref","frontmatter","split","map","e","trim","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","_components_seo__WEBPACK_IMPORTED_MODULE_7__","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_5__","flexWrap","justifyContent","listStyle","padding","marginLeft","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1__","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","oceanBeachTheme","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","footerQuery","Footer","react_default","gatsby_browser_entry","git","className","href","_390769054","Layout","header","_this$props","boxShadow","textDecoration","color","fontFamily","marginRight","maxWidth","footer","SocialLink","target","bioQuery","Bio","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fixed","avatar","childImageSharp","alt","verticalAlign","minWidth","borderRadius","imgStyle","paddingLeft","fontSize","mail","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","icon","faEnvelope","vk","faVk","instagram","faInstagram","github","faGithub","_public_static_d_4035997540_json__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-templates-blog-post-js-72a1aef4b2ed34bf2a7f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst keywords = ({ frontmatter: { keywords } }) => {\n  if (!keywords) {\n    return []\n  }\n  return keywords.split(',').map(e => e.trim())\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          keywords={keywords(post)}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n            marginLeft: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        keywords\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport oceanBeachTheme from 'typography-theme-ocean-beach'\n\nconst typography = new Typography(oceanBeachTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={footerQuery}\n    render={data => {\n      const { git } = data.site.siteMetadata\n      return (\n        <footer\n          className=\"secondColor\"\n          style={{\n            marginTop: rhythm(2),\n          }}\n        >\n          <p>Исходный код на <a className=\"secondColor\" href={git}>GitHub</a></p>\n        </footer>\n      )\n    }}\n  />\n)\n\nconst footerQuery = graphql`\n  query FooterQuery {\n    site {\n      siteMetadata {\n        git\n      }\n    }\n  }\n`\n\nexport default Footer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Footer from \"./footer\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVk, faInstagram, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons'\n\nimport { rhythm } from \"../utils/typography\"\n\nconst SocialLink = props => (\n  <a\n    className=\"socialLink\"\n    style={{\n      marginRight: 10\n    }}\n    target=\"_blank\"\n    {...props}\n  >\n    {props.children}\n  </a>\n)\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `table`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p\n              className=\"secondColor\"\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                paddingLeft: 20,\n              }}\n            >\n              {author}\n            </p>\n            <p\n              style={{\n                display: `table-cell`,\n                verticalAlign: `middle`,\n                paddingLeft: 20,\n                fontSize: 25,\n              }}\n            >\n              <SocialLink href={`mailto:${social.mail}`}>\n                <FontAwesomeIcon icon={faEnvelope} />\n              </SocialLink>\n              <SocialLink href={social.vk}>\n                <FontAwesomeIcon icon={faVk} />\n              </SocialLink>\n              <SocialLink href={social.instagram}>\n                <FontAwesomeIcon icon={faInstagram} />\n              </SocialLink>\n              <SocialLink href={social.github}>\n                <FontAwesomeIcon icon={faGithub} />\n              </SocialLink>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          vk\n          instagram\n          github\n          mail\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}